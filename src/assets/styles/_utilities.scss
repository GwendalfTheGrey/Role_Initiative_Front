@use "../../assets/styles/mixins" as *;

.page-width {
    width: calc(100% - var(--page-width-margin));
}

.page-max-width {
    max-width: var(--page-max-width);
}

.center-horizontal {
    margin-inline: auto;
}

.corpus-line-height {
    line-height: var(--corpus-line-height);
}

.btn {
    font-size: var(--nav-fs);
    padding: 0.5em 1.5em;
    border-radius: 100vw;
    cursor: pointer;
    &-phantom {
        border: 0.125em solid var(--_accent-clr);
        background-color: transparent;
        color: var(--_accent-clr);
        filter: drop-shadow(0 0 var(--drop-shadow-blur) var(--_accent-clr));
        transition: filter 400ms ease, border-color 300ms ease-in-out 100ms,
            background-color 300ms ease-in-out 100ms,
            color 300ms ease-in-out 100ms;
        &:disabled {
            opacity: var(--half-opacity);
        }
        @include hover {
            filter: none;
            border-color: var(--_txt-clr);
            background-color: var(--_txt-clr);
            color: var(--primary-bg-clr);
        }
    }
}

.input-text {
    position: relative;
    &:has(input:read-only) {
        opacity: var(--half-opacity);
    }
    input {
        width: 100%;
    }
    span {
        --_input-padding-block: calc(var(--input-padding-block) / 2);
        --_input-padding-inline: calc(var(--input-padding-inline) / 2);
        position: absolute;
        top: var(--_input-padding-block);
        left: var(--_input-padding-inline);
        padding-top: var(--_input-padding-block);
        padding-inline: var(--_input-padding-inline);
        border-radius: var(--border-radius);
        background-color: var(--primary-bg-clr);
        color: hsl(var(--fantasy-txt-values) / var(--alpha));
        transition: top 300ms ease, scale 300ms ease;
    }
    &:focus-within span,
    input:not(:placeholder-shown) + span {
        top: calc(-0.5em - var(--_input-padding-block));
        scale: 0.9;
    }
}

.generic-checkbox {
    position: relative;
    display: grid;
    grid-auto-columns: auto;
    place-content: center;
    width: fit-content;
    cursor: pointer;
    &::before {
        content: "\2714";
        position: absolute;
        inset: 0;
        grid-column: 1 / 2;
        grid-row: 1;
        text-align: center;
        font-weight: var(--nav-link-fw);
        color: var(--primary-bg-clr);
    }
    > * {
        grid-row: 1;
    }
    input {
        appearance: none;
        width: 1.5em;
        aspect-ratio: 1;
        border: 1px solid var(--fantasy-txt-clr);
        border-radius: var(--border-radius);
        background-color: var(--secondary-bg-clr);
        font-size: var(--corpus-fs);
        &:checked {
            background-color: var(--fantasy-txt-clr);
        }
    }
    span,
    a {
        align-self: center;
        margin-left: 1em;
    }
}

.form-error {
    opacity: var(--half-opacity);
}

.room {
    grid-template-columns: auto 1fr;
    &-user {
        max-width: 5em;
        p {
            font-size: var(--legend-fs);
        }
    }
    &-content {
        padding-left: 0.5em;
        border-left: 1px solid hsl(var(--primary-bg-values) / var(--alpha));
        h2 {
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 2;
            overflow: hidden;
        }
        &-details + p {
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 5;
            overflow: hidden;
        }
    }
    &-addons {
        grid-column: 1 / -1;
        display: grid;
        align-items: center;
        gap: 2em;
        margin-top: 1em;
        button {
            justify-self: center;
        }
        a {
            justify-self: center;
            font-size: var(--nav-fs);
            color: var(--_accent-clr);
            @include hover {
                text-decoration: underline;
                text-decoration-thickness: 1px;
                text-decoration-color: var(--_accent-clr);
            }
        }
        @include s {
            gap: 0;
            button,
            a {
                grid-area: 1 / 1;
            }
            button {
                justify-self: start;
            }
            a {
                justify-self: end;
            }
        }
    }
}

.room-details {
    max-width: var(--half-page-max-width);
    a {
        justify-self: center;
        margin-top: 1em;
        width: 4em;
        opacity: var(--half-opacity);
        transition: opacity 300ms ease;
        @include hover {
            opacity: 1;
        }
    }
    p[data-ongoing="true"] {
        justify-self: center;
        grid-column: 1 / -1;
        scale: 1.2;
        color: var(--_accent-clr);
        filter: drop-shadow(0 0 var(--drop-shadow-blur) var(--_accent-clr));
    }
    p[data-ongoing="false"] {
        justify-self: center;
        grid-column: 1 / -1;
        scale: 1.2;
        color: hsl(var(--_txt-values) / var(--alpha));
        filter: none;
    }
    &-user {
        justify-self: center;
        width: 4em;
        &-username {
            font-size: var(--legend-fs);
        }
    }
    &-actions {
        grid-column: 1 / -1;
        grid-row: 5 / 6;
        display: grid;
        gap: 1em;
        margin-top: 1em;
        @include s {
            justify-self: end;
            grid-template-columns: repeat(2, auto);
            grid-row: 4 / 5;
        }
    }
    @include s {
        grid-template-columns: auto 1fr;
        a {
            place-self: center;
            grid-column: 1 / 2;
            grid-row: 4 / 5;
            margin-block: 0 -1em;
        }
        &_content {
            padding-left: 0.5em;
            border-left: 1px solid hsl(var(--primary-bg-values) / var(--alpha));
        }
    }
    @include sm {
        &-user {
            width: 5em;
        }
    }
}

.room,
.room-details {
    display: grid;
    grid-template-rows: 1fr auto;
    gap: 1em;
    padding: 1.5em 1.75em;
    border-radius: var(--double-border-radius);
    background-color: var(--secondary-bg-clr);
    &-user {
        align-self: start;
        display: grid;
        gap: 0.25em;
        &-icon {
            position: relative;
            &-body {
                fill: var(--_txt-clr);
            }
            &-dice {
                position: absolute;
                inset: 0;
                fill: var(--_accent-clr);
            }
        }
        p {
            justify-self: center;
        }
    }
    &-content {
        --alpha: var(--half-opacity);
        &-details {
            p[data-ttrpg-genre="fantasy"] {
                --_accent-clr: var(--fantasy-accent-clr, hsl(29 100% 50%));
            }
            p[data-ttrpg-genre="sci-fi"] {
                --_accent-clr: var(--scifi-accent-clr, hsl(290 100% 50%));
            }
            p[data-ttrpg-genre="horror-and-other"] {
                --_accent-clr: var(--horror-accent-clr, hsl(152 100% 50%));
            }
            :first-child {
                color: var(--_accent-clr);
            }
            * {
                padding-top: 0.5em;
                font-size: var(--legend-fs);
            }
            p:has(span) {
                font-style: italic;
            }
            + p {
                margin-top: 1em;
                white-space: pre-wrap;
            }
        }
    }
}

.add-room {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border: 0.25em solid var(--_txt-clr);
    border-radius: var(--double-border-radius);
    opacity: var(--half-opacity);
    transition: opacity 300ms ease, background-color 300ms ease;
    span:first-of-type {
        font-size: 10rem;
    }
    span:last-of-type {
        font-size: 2em;
    }
    @include hover {
        opacity: 1;
        background-color: var(--secondary-bg-clr);
    }
}
